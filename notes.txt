<<<<<<< HEAD
SP = ./srcs/

SRC =	$(SP)main.c					\
		$(SP)read_programs.c		\
		$(SP)error_quit.c			\
		$(SP)free_env.c				\
		$(SP)init_env.c				\
		$(SP)pc_pos.c				\
		$(SP)manage_args.c			\
	 	$(SP)run_simulation.c		\
		$(SP)destroy_process.c		\
	 	$(SP)run_process.c			\
		$(SP)ft_aff.c				\
		$(SP)ft_long_fork.c			\
		$(SP)ft_long_load.c			\
		$(SP)ft_long_load_index.c	\
		$(SP)get_param_value.c		\
		$(SP)set_param_value.c		\

all: $(NAME)

$(NAME):
	@make qme
	@clear
	@echo "\x1b[31m-----Compiling Libft\x1b[0m"
	@make -C libft fclean
	@make -C libft
	@echo "\x1b[34m+++++Done Compiling Libft\x1b[0m"
	@echo "\x1b[31m-----Compiling $(NAME)\x1b[0m"
	@$(CC) $(NAME) $(CFLAGS) $(SRC) $(LIBFT) $(HEADER)
	@echo "\x1b[34m+++++Done Compiling $(NAME)\x1b[0m"
	@echo "\x1b[32m+++++Completed All Compiling\x1b[0m"

force:
	@if [ -f $(NAME) ]; then \
		make re; else \
		make $(NAME); \
		fi;

quick:
	@clear
	@echo "\x1b[31m-----Compiling $(NAME)\x1b[0m"
	@$(CC) $(NAME) $(CFLAGS) $(SRC) $(LIBFT) $(HEADER)
	@echo "\x1b[32m+++++Done Compiling $(NAME)\x1b[0m"
=======

test:
	@if [ $TERM_PROGRAM = "Apple_Terminal" -o $TERM_PROGRAM = "iTerm.app" ];
		then echo "True";
		else echo "False";
	fi;

=======
		PRO_PLA = &(env->players[k]);
		ft_bzero(PRO_REG, REG_NUMBER * REG_SIZ);
		ft_memcpy(PRO_REG[0], &(PRO_PLA[k].number), sizeof(int));
>>>>>>> f1

start:
	st		r1, 6
	live	%0
	fork	%:function2
	st		r1, 6
	live	%0
	ld		%0, r2
	zjmp	%:start

function2:
	ldi		%:start, %0, r7
	st		r7, 200
	zjmp	%:function2

function:
	ld		%:start, r3
	ld 		%150994944, r4
	st		r4, 101
	st		r3, 100
	ld		%0, r2

alive:
	st		r1, 6
	live	%0

loop:
	ld		%0, r2
	zjmp	%:alive;


	ldi		%:function1, r5, r2
	sti		r2, r4, %0
	ldi		r5, %1, r5
	#ldi		%1, r4, r4
	st		r1, 6
